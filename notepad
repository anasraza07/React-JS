LESSON 01: REACT JS roadmap

Why to learn React ? 
    - hype, job, trend, build UI
    - makes easy to manage & build complex frontend

When should I learn React ?
    - After mastering JS
    - most project dont need react in initial phase

Why react was created ?
    - Fanatam (ghost) message problem    
    - facebook (chat ui)
    - No consistency in UI
    - khan academy => unsplash

Dont learn React if:
    - you dont know how JS works or DOM works

React learning Process
    1. go in-depth (Babel, fibre, Virtual DOM, diff algo, hydration)
    2. by making projects (one topic at a time)
    projects like Todo, Calculator, Github API

React is a Library
    - frameworks (military) VS library (cool dude)

Topic to learn:
    - core of React (state or UI manipulation, JSX)
    - component Reusability
    - Reusing of component (Props)
    - How to propagate change (hooks)

Additional Addon to React   
    - Router (React dont have router)
    - state management (React had not state management)
        - Redux, Redux toolkit, zustand, context API
    - class based component
        - legacy code
    BAAS (Backend as a service) Apps
        -social media clone, e-commerce apps


LESSON 02:
websites / webapp = react -> react-dom
websites / webapp = react -> react-native
npm = node package manager
npx = node package executer

create-react-app is a utility or software, but ye bht bulky hai extra cheezen bhi deta hai isliye time bht lagta so that we use
npx create vite@latest


LESSON 03:
react khud ka bhi eik dom banaata hai jisay ham kehte hain virtual dom aur phr difference check krta hai real dom aur virtul dom main then sirf unhi elements ko change krdeta hai
Component ka naam capitalised hona chahiye wrna error ayega aur file ka naam bhi capitalised rkhna achi practice hai 
vite main .jsx hi hona chahiye agr jsx return horaha hai 
vite main ye khud script run krdeti hai direct html file main but react main react-scripts run krte hain saari script
SPA = single page application means ke eik hi html ki file hai wahi se content jayega aayega bs eik hi page hai content change hota rahega 


LESSON 04:
{username} yahan curly brackets main evaluated expression hi likhte hain
babel automatically code inject krdeta hai react ko import krne ki bhi need nhi yehi kaam hai babel ka

LESSON 05:
ui updation ko react control krta hai, jahan change krna hai kro hojayega but ui pe react khud change ya update karega through hooks 
useState aapki values ko change yaani ui pr propagate krne ke liye responsible hai (dom ke andr)
React me jab useState ka use krte ho, aur setState function call krte ho, to state update immediately reflect nahi hoti. jo counter variable hai, wo purani value hold kar raha hota hai jab tak next render nahi hota 
setCounter ke call ke baad, immediately counter update nahi hota.

LESSON 06: (IMPORTANT FOR INTERVIEW)
virutal dom = react eik apna khud ak eik dom create krta hai then browser ke dom se compare krta hai aur jo jo cheezen ya elements change hue hain sirf unko update krdeta hai
reconcilation = algrithm hai react use krta hai 2 trees ko differentiate krne ke liye aur new changes update krne ke liye
Docs to read best keypoints = "github.com/acdite/react-fiber/architecture"


LESSON 07:
aapke jitne bhi updates bhejne hain UI ya variables main 'usestate' unko batches main eik saath bhejta hai agr saara kaam same hi hota hai to ye sbko eik main krke eik hi baar krta hai
ab agr aesi koi situation aagai to wo usState ke andr callback function ko use krke solve hoskti hai jis main last updated state mil jaati hai hr baar as a parameter phr uske saath aap kch bhi kr skte ho

LESSON 08: 
onclick eik function chahta hai hamesha aur agr function ka reference dogay to parameter paas nhi kr paogay that's why use callback function in onClick method, its a syntax agr reference main hi parameter pass krdogay to onClick wahi execute krdega us function ki return value

 
